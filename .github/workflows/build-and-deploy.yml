name: Build and Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B -ntp clean install

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deployment template (placeholder)
        run: |
          echo "This is a placeholder for deployment steps."
          echo "Uncomment one of the examples below and add required secrets in GitHub repo settings."

      # --- Example: Deploy to Heroku ---
      # - name: Login to Heroku Container Registry
      #   env:
      #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      #   run: |
      #     echo $HEROKU_API_KEY | docker login --username=_ --password-stdin registry.heroku.com
      #
      # - name: Build Docker image
      #   run: |
      #     docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web .
      #
      # - name: Push Docker image
      #   run: |
      #     docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
      #
      # - name: Release on Heroku
      #   env:
      #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      #   run: |
      #     curl -n -X PATCH https://api.heroku.com/apps/${{ secrets.HEROKU_APP_NAME }}/formation \
      #       -d '{"updates":[{"type":"web","docker_image":"registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web"}]}' \
      #       -H "Content-Type: application/json" \
      #       -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
      #       -H "Authorization: Bearer $HEROKU_API_KEY"
      #
      # Notes:
      # - Add repo secrets: HEROKU_API_KEY, HEROKU_APP_NAME
      # - Optionally HEROKU_EMAIL if needed by your workflow

      # --- Example: Deploy to AWS Elastic Beanstalk (EB) using Dockerrun ---
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}
      #
      # - name: Build Docker image
      #   run: docker build -t your-image-name .
      #
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2
      #
      # - name: Tag and push image to ECR
      #   run: |
      #     docker tag your-image-name:latest ${{ steps.login-ecr.outputs.registry }}/your-repo:latest
      #     docker push ${{ steps.login-ecr.outputs.registry }}/your-repo:latest
      #
      # - name: Deploy to Elastic Beanstalk
      #   run: |
      #     echo "Use AWS CLI or EB CLI to create/update application versions with the image above."
      #
      # Notes:
      # - Add repo secrets: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_REGION